openapi: 3.0.0
info:
  title: Python / Vue proof of concept API
  description: API for accessing the requested algorithms (Fibonacci, Ackermann, and factorial).
  version: "1.0"
paths:
  /api/fibonacci:
    get:
      summary: Get nth number from Fibonacci sequence
      description: >
        Calculate a ​Fibonacci number​ F(n), where n is provided by the user.
      parameters:
        - in: query
          name: n
          schema:
            type: integer
            minimum: 0
          description: The number in the Fibonacci sequence we wish to calculate
          required: true
      responses:
        "200":
          description: Successfully calculated nth Fibonacci number
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValueResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: Unexpected error

  /api/ackermann:
    get:
      summary: Get result of Ackermann function
      description: >
        Calculate the result of the Ackermann function​ A(m,n), where m and n are provided by the user.
      parameters:
        - name: m
          in: query
          description: The 'm' parameter for the Ackermann function
          required: true
          schema:
            type: integer
            minimum: 0
        - name: n
          in: query
          description: The 'n' parameter for the Ackermann function
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        "200":
          description: Successfully calculated result of Ackermann function​
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValueResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: Unexpected error

  /api/factorial:
    get:
      summary: Get factorial for n
      description: >
        Calculate factorial for n, where n is provided by the user.
      parameters:
        - name: n
          in: query
          description: The number for which we would to calculate the factorial
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        "200":
          description: Successfully calculated factorial for n
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValueResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: Unexpected error

components:
  schemas:
    ValueResponse:
      type: object
      required:
        - value
        - processingTime
        - responseTime
      properties:
        value:
          type: string
          example: "125"
          description: This is the value calculated by the algorithm.
        processingTime:
          type: string
          example: 0.04314s
          description: The time in seconds the algorithm took to calculate the value.
        responseTime:
          type: string
          example: 0.04314s
          description: The time in seconds needed to serve the response (including processing time).

    ErrorResponse:
      type: object
      required:
        - error
        - responseTime
      properties:
        error:
          type: string
          example: "bad request: query parameter n cannot be negative"
          description: A error message describing what went wrong.
        responseTime:
          type: string
          example: 0.04314s
          description: The time in seconds needed to serve the response.
